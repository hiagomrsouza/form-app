version: "3.8"

services:
  # Backend services
  database:
    container_name: vial-backend-db
    image: postgres:latest
    environment:
      POSTGRES_USER: vial
      POSTGRES_PASSWORD: vial
      POSTGRES_DB: vial
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vial-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vial"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    container_name: vial-backend-api
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    command: npm run dev
    volumes:
      - ./backend:/usr/app/
      - /usr/app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - vial-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Frontend service
  frontend:
    container_name: vial-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    volumes:
      - ./frontend:/usr/app
      - /usr/app/node_modules
      - /usr/app/.next
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080/
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - vial-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  vial-network:
    driver: bridge

volumes:
  postgres_data: